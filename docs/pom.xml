<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright (c) Connexta
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>replication</artifactId>
        <groupId>replication</groupId>
        <version>0.3.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>docs</artifactId>

    <properties>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss:SS</maven.build.timestamp.format>
        <packaging>pom</packaging>
        <module>docs</module>
    </properties>

    <profiles>
        <profile>
            <id>release</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- This execution is for publishing the pdf file to nexus. -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>attach-docs-pdf</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>${project.build.directory}/docs/pdf/documentation.pdf</file>
                                            <type>pdf</type>
                                            <classifier>documentation</classifier>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- This will trigger the building of the pdf docs -->
                    <plugin>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>${asciidoctor.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generate-pdf-doc</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <backend>pdf</backend>
                                    <outputDirectory>${project.build.directory}/docs/pdf
                                    </outputDirectory>
                                    <!-- WARNING callout bullets don't yet work with CodeRay -->
                                    <attributes>
                                        <pagenums />
                                        <toc />
                                        <idprefix>_</idprefix>
                                        <idseparator>_</idseparator>
                                    </attributes>
                                    <imagesDir>${project.build.directory}/images</imagesDir>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <plugins>
            <!-- this will process the asciidocs, replacing variable names etc., and place them in
            the doc-contents directory -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>copy-adocs</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/doc-contents
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.adoc</include>
                                        <include>**/*.ftl</include>
                                        <include>jbake.properties</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>**/*.adoc</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-images</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/images
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/images</directory>
                                    <filtering>false</filtering>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/images/standard-${project.version}</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>**/*.adoc</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- jbake takes the processed files from doc-contents and puts them together based on
            the template files and jbake.properties. Once finished, the files get stored in the
            asciidoctor-ready file. -->
            <plugin>
                <groupId>org.jbake</groupId>
                <artifactId>jbake-maven-plugin</artifactId>
                <version>${jbake.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <inputDirectory>${project.build.directory}/doc-contents</inputDirectory>
                    <outputDirectory>${project.build.directory}/asciidoctor-ready</outputDirectory>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.freemarker</groupId>
                        <artifactId>freemarker</artifactId>
                        <version>2.3.23</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>${asciidoctor.maven.plugin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.pegdown</groupId>
                        <artifactId>pegdown</artifactId>
                        <version>1.4.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- asciidoctor converts the result from jbake into html and stores it in docs/html -->
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor.maven.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby-complete</artifactId>
                        <version>${jruby.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-diagram</artifactId>
                        <version>${asciidoctorj.diagram.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-pdf</artifactId>
                        <version>${asciidoctorj.pdf.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>output-html</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html</backend>
                            <doctype>book</doctype>
                            <outputDirectory>${project.build.directory}/docs/html
                            </outputDirectory>
                            <imagesDir>${project.build.directory}/images</imagesDir>
                            <attributes>
                                <webfonts>false</webfonts>
                                <iconfont-remote>false</iconfont-remote>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <sourceDirectory>${project.build.directory}/asciidoctor-ready
                    </sourceDirectory>
                    <gemPath>${project.build.directory}/gems-provided</gemPath>
                    <headerFooter>true</headerFooter>
                    <sourceHighlighter>coderay</sourceHighlighter>
                    <requires>
                        <require>asciidoctor-diagram</require>
                    </requires>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven.assembly.plugin.version}</version>
                <executions>
                    <execution>
                        <configuration>
                            <descriptors>
                                <descriptor>${project.basedir}/src/assembly/asciidocs.xml</descriptor>
                            </descriptors>
                            <outputDirectory>${project.build.directory}/adoc-files</outputDirectory>
                        </configuration>
                        <id>include-adocs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                    <!-- We don't currently have any images so this will throw an error but we
                    should uncomment it when we do add images -->
                    <!--
                    <execution>
                        <configuration>
                            <descriptor>${project.basedir}/src/assembly/images.xml</descriptor>
                            <outputDirectory>${project.build.directory}/images</outputDirectory>
                        </configuration>
                        <id>include-images</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                    -->
                    <execution>
                        <configuration>
                            <descriptors>
                            <descriptor>${project.basedir}/src/assembly/jdocs.xml</descriptor>
                            </descriptors>
                            <outputDirectory>${project.build.directory}/export-templates</outputDirectory>
                        </configuration>
                        <id>include-templates</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                    <execution>
                        <configuration>
                            <descriptors>
                                <descriptor>${project.basedir}/src/assembly/docs-export.xml</descriptor>
                            </descriptors>
                            <outputDirectory>${project.build.directory}/export-docs</outputDirectory>
                        </configuration>
                        <id>include-docs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- This execution is for publishing the html file to nexus. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>attach-docs-html</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/docs/html/documentation.html</file>
                                    <type>html</type>
                                    <classifier>documentation</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Djava.awt.headless=true</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>